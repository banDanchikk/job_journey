"""initial

Revision ID: 35d4cd4e6705
Revises: 
Create Date: 2024-04-28 20:03:04.491681

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '35d4cd4e6705'
down_revision = None
branch_labels = None
depends_on = None


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('cv')
    op.drop_table('social_links')
    op.drop_table('vacancies')
    op.drop_table('vacancies_with_cv')
    op.drop_table('roles')
    op.drop_table('saved_vacancies')
    # ### end Alembic commands ###


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('avatar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('acc_filling', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('vacancies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('work_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('registered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='vacancies_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vacancies_pkey')
    )
    op.create_table('vacancies_with_cv',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('vacancy_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='vacancies_with_cv_user_id_fkey'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], name='vacancies_with_cv_vacancy_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vacancies_with_cv_pkey')
    )
    op.create_table('saved_vacancies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vacancy_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='saved_vacancies_user_id_fkey'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], name='saved_vacancies_vacancy_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='saved_vacancies_pkey')
    )
    op.create_table('social_links',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('social_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('social_link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='social_links_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='social_links_pkey')
    )
    op.create_table('cv',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cv_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='cv_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cv_pkey')
    )
    # ### end Alembic commands ###
